@model WildPath.ViewModels.CheckoutVM

@{
    ViewData["Title"] = "Checkout";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Checkout</h1>
<form id="paymentForm" method="post" action="/Home/ProcessTransaction">
    <div id="mandatoryFields">
        <h2>Contact Details</h2>
        <div class="form-group">
            <label asp-for="Phone">Phone Number</label>
            <input type="tel" class="form-control" id="phone" placeholder="Enter phone number" asp-for="Phone">
        </div>

        <h2>Delivery Address</h2>
        <div class="form-group">
            <label asp-for="Address.Address1">Address Line 1</label>
            <input type="text" class="form-control" id="address1" placeholder="Enter address" asp-for="Address.Address1" value="@Model.Address.Address1">
        </div>
        <div class="form-group">
            <label asp-for="Address.City">City/Town</label>
            <input type="text" class="form-control" id="city" placeholder="Enter city or town" asp-for="Address.City">
        </div>
        <div class="form-group">
            <label asp-for="Address.Province">Province</label>
            <input type="text" class="form-control" id="province" placeholder="Enter province" asp-for="Address.Province">
        </div>
        <div class="form-group">
            <label asp-for="Address.PostalCode">Postal Code</label>
            <input type="text" class="form-control" id="postalCode" placeholder="Enter postal code" asp-for="Address.PostalCode">
        </div>
    </div>
    <h2>Shipping Method</h2>
    <div class="form-group">
        <div class="form-check">
            <input class="form-check-input" type="radio" asp-for="ShippingMethod"
                   value="Standard Shipping" id="standardShipping">
            <label class="form-check-label" for="standardShipping">
                Free Standard Shipping for order <br />
                over $<span>@Model.FreeShippingThreshold</span> within Canada <br />
                $0.00 - 3 to 7 Business Days
            </label>
        </div>
        <br />
        <div class="form-check">
            <input class="form-check-input" type="radio" asp-for="ShippingMethod"
                   value="Express Shipping" id="expressShipping">
            <label class="form-check-label" for="expressShipping">
                Flat Standard Shipping for order <br />
                under $<span>@Model.FreeShippingThreshold</span> within Canada <br />
                $<span>@Model.ShippingRate</span> - 3 to 7 Business Days
            </label>
        </div>
    </div>

    <div class="cart-summary">
        <h2>Order Summary</h2>
        <table>
            <tr>
                <td>Total Items:</td>
                <td>@Model.TotalItems</td>
            </tr>
            <tr>
                <td>Subtotal:</td>
                <td>@Model.CurrencySymbol@Model.TotalPrice.ToString("N2")</td>
            </tr>
            <tr>
                <td>Shipping:</td>
                <td>@Model.CurrencySymbol@Model.Shipping.ToString("N2")</td>
            </tr>
            <tr>
                <td>Tax:</td>
                <td>@Model.CurrencySymbol@Model.Tax.ToString("N2")</td>
            </tr>
            <tr>
                <td><strong>Grand Total:</strong></td>
                <td><strong>@Model.CurrencySymbol@Model.GrandTotal.ToString("N2") @Model.CurrencyCode</strong></td>
            </tr>
        </table>
    </div>
    <div id="hiddenFields">
        <input class="hiddenField" type="hidden" asp-for="@Model.TransactionId" value="@Model.TransactionId">
        <input class="hiddenField" type="hidden" asp-for="@Model.PayerId" value="@Model.PayerId">
        <input class="hiddenField" type="hidden" asp-for="@Model.PayerEmail" value="@Model.PayerEmail">
        <input class="hiddenField" type="hidden" asp-for="@Model.CaptureId" value="@Model.CaptureId">
        <input class="hiddenField" type="hidden" asp-for="@Model.PayerFullName" value="@Model.PayerFullName">
        <input class="hiddenField" type="hidden" asp-for="@Model.GrandTotal" value="@Model.GrandTotal" />
        <input class="hiddenField" type="hidden" asp-for="@Model.CurrencyCode" value="@Model.CurrencyCode" />
        <input class="hiddenField" type="hidden" asp-for="@Model.CurrencySymbol" value="@Model.CurrencySymbol" />
    </div><br />
    <div class="alert alert-warning" role="alert" id="formWarning" style="display: none;">
        Please fill in Phone and all address fields before proceeding.
    </div>
</form>

<!-- Place to render the PayPal button -->
<div id="paypal-button-container"></div>

<script src="https://www.paypal.com/sdk/js?client-id=AcYzUTriY360UFrFnBT_Tns0NkqucbwhYUVTnIFEa6zp1QpPScRPxWqiFot7SYxKTX5JL2wl0d16pFn7"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {

        if (@Html.Raw(Json.Serialize(Model.IsFreeShipping))) {
            document.getElementById("expressShipping").disabled = true;
        } else {
            document.getElementById("standardShipping").disabled = true;
        }

        // PayPal button initialization
        var paypalButton = paypal.Buttons({
            createOrder: function (data, actions) {
                return actions.order.create({
                    purchase_units: [{
                        amount: {
                            value: parseFloat(document.getElementById('GrandTotal').value).toFixed(2),
                            currency: document.getElementById('CurrencyCode').value
                        }
                    }]
                });
            },
            onApprove: function (data, actions) {
                actions.order.capture().then(function (details) {
                    console.log();
                    console.log('details ==> ' + JSON.stringify(details));

                    document.getElementById('TransactionId').value = details.id;
                    document.getElementById('PayerFullName').value = details.payer.name.given_name + ' ' + details.payer.name.surname;
                    document.getElementById('PayerId').value = details.payer.payer_id;
                    document.getElementById('CaptureId').value = details.purchase_units[0].payments.captures[0].id;
                    document.getElementById('PayerEmail').value = details.payer.email_address;

                    document.getElementById('paymentForm').submit();
                });
            },
            onCancel: function (data) {
                alert('Transaction was cancelled.');
            },
            onError: function (err) {
                alert('An error occurred during the transaction. Error ==> ' + JSON.stringify(err));
            },
            style: {
                layout: 'horizontal',
                color: 'silver',
                shape: 'rect',
                label: 'checkout'
            }
        });

        // Render PayPal button
        paypalButton.render('#paypal-button-container');

        // Select all input elements inside the mandatoryFields div
        var inputElements = document.querySelectorAll('#mandatoryFields input');

        // Loop through each input element and add an event listener for value change
        inputElements.forEach(function (input) {
            input.addEventListener('input', handleValueChange);
        });

        function handleValueChange(event) {
            toggleWarningMessage();
        }

        // Function to toggle the visibility of the warning message and PayPal button
        function toggleWarningMessage() {
            var formWarning = document.getElementById('formWarning');
            var payPalButton = document.getElementById('paypal-button-container');
            formWarning.style.display = areFieldsFilled() ? 'none' : 'block';
            payPalButton.style.display = areFieldsFilled() ? 'block' : 'none';
        }

        // Function to check if all required fields are filled
        function areFieldsFilled() {
            var phone = document.getElementById('phone').value;
            var address1 = document.getElementById('address1').value;
            var city = document.getElementById('city').value;
            var province = document.getElementById('province').value;
            var postalCode = document.getElementById('postalCode').value;

            return phone !== "" && address1 !== "" && city !== "" && province !== "" && postalCode !== "";
        }

        toggleWarningMessage();
    });
</script>