@model WildPath.ViewModels.CheckoutVM

@{
    ViewData["Title"] = "Checkout";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Checkout</h1>

@if (!Model.IsLoggedIn)
{
    <h2>Contact Details</h2>
    <form>
        <div class="form-group">
            <label for="email">Email Address</label>
            <input type="email" class="form-control" id="email" placeholder="Enter email">
        </div>
        <div class="form-group">
            <label for="phone">Phone Number</label>
            <input type="tel" class="form-control" id="phone" placeholder="Enter phone number">
        </div>
    </form>
}

<h2>Delivery Address</h2>
<form>
    <div class="form-group">
        <label for="firstName">First Name</label>
        <input type="text" class="form-control" id="firstName" placeholder="Enter first name">
    </div>
    <div class="form-group">
        <label for="lastName">Last Name</label>
        <input type="text" class="form-control" id="lastName" placeholder="Enter last name">
    </div>
    <div class="form-group">
        <label for="address1">Address Line 1</label>
        <input type="text" class="form-control" id="address1" placeholder="Enter address">
    </div>
    <div class="form-group">
        <label for="country">Country</label>
        <select class="form-control" id="country">
            <option value="Canada">Canada</option>
        </select>
    </div>

    <div class="form-group">
        <label for="province">Province</label>
        <input type="text" class="form-control" id="province" placeholder="Enter province">
    </div>
    <div class="form-group">
        <label for="city">City/Town</label>
        <input type="text" class="form-control" id="city" placeholder="Enter city or town">
    </div>
    <div class="form-group">
        <label for="postalCode">Postal Code</label>
        <input type="text" class="form-control" id="postalCode" placeholder="Enter postal code">
    </div>
</form>

<h2>Shipping Method</h2>
<form>
    <div class="form-group">
        <div class="form-check">
            <input class="form-check-input" type="radio" name="shippingMethod" id="standardShipping" value="Standard Shipping" checked>
            <label class="form-check-label" for="standardShipping">
                Free Standard Shipping for order <br />
                over $75.99 within Canada <br />
                $0.00 - 3 to 7 Business Days
            </label>
        </div> <br />
        <div class="form-check">
            <input class="form-check-input" type="radio" name="shippingMethod" id="expressShipping" value="Express Shipping">
            <label class="form-check-label" for="expressShipping">
                Flat Standard Shipping for order <br />
                under $75.99 within Canada <br />
                $7.99 - 3 to 7 Business Days
            </label>
        </div>
    </div>
</form>


<div class="cart-summary">
    <h2>Order Summary</h2>
    <p>Total Items: <span id="totalItems">@Model.totalItems</span></p>
    <p>Subtotal: $<span id="subtotal">@Model.totalPrice</span></p>
    <p>Shipping: $<span id="shipping">0.00</span></p>
    <p>Tax: $<span id="tax">0.00</span></p>
    <p>Grand Total: $<span id="grandTotal">@Model.totalPrice</span></p>

</div>

    <!-- Place to render the PayPal button -->
        <div id="paypal-button-container"></div>
        <script src="https://www.paypal.com/sdk/js?client-id=AcYzUTriY360UFrFnBT_Tns0NkqucbwhYUVTnIFEa6zp1QpPScRPxWqiFot7SYxKTX5JL2wl0d16pFn7"></script>
@* <button type="submit" class="btn btn-primary">Go to Payment</button>
 *@
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var orderPrice = @Model.totalPrice; // Replace this with the actual order price obtained from your system
        document.getElementById("standardShipping").disabled = true;
        document.getElementById("expressShipping").disabled = true;



        if (orderPrice > 75.99) {
            document.getElementById("standardShipping").checked = true;
            document.getElementById("standardShipping").disabled = false;
        } else {
            document.getElementById("expressShipping").checked = true;
            document.getElementById("expressShipping").disabled = false;
            document.getAnimations("shipping").innerText = "7.99";
        }

// Calculate the grand total
        var grandTotal = parseFloat(document.getElementById("subtotal").innerText);
        var shipping = 7.99;
        if(document.getElementById("standardShipping").checked) {
            shipping = 0.00;
        }
        grandTotal += shipping;
        var tax = grandTotal * 0.12;

        grandTotal += (grandTotal * 0.12);
        document.getElementById("shipping").innerText = shipping.toFixed(2);
        document.getElementById("tax").innerText = tax.toFixed(2);
        document.getElementById("grandTotal").innerText = grandTotal.toFixed(2);
    });

    paypal.Buttons({
        // Set up the transaction
        createOrder: function (data, actions) {
            return actions.order.create({
                purchase_units: [{
                    amount: {
                        value: parseFloat(document.getElementById('grandTotal').innerText),
                        currency:
                            "CAD"
                    }
                }]
            });
        },

        // Finalize the transaction
        onApprove: function (data, actions) {
            return actions.order.capture().then(function (details) {

                var selectedShippingMethod = document.querySelector('input[name="shippingMethod"]:checked').value;
                var address = document.getElementById('address1').value;

                console.log(details);
                // Redirect to the PayPalConfirmation action method
                window.location.href =
                    '/Home/PayPalConfirmation?TransactionId=' +
                    encodeURIComponent(details.id) + '&Amount=' +
                    encodeURIComponent(details.purchase_units[0]
                        .amount.value) + '&PayerName=' +
                    encodeURIComponent(details.payer.name.given_name) + '&PayerEmail=' +
                    encodeURIComponent(details.payer.email_address) + '&PaymentMethod=' +
                    encodeURIComponent('PayPal') + '&ShippingMethod=' + encodeURIComponent(selectedShippingMethod)
+ '&FkAddressId=' + encodeURIComponent(address)
                   ;

            });
        },


        onCancel: function (data) {
            alert('Transaction was cancelled.');
        },
        onError: function (err) {
            alert('An error occurred during the transaction.');
        },
        style: {
            layout: 'horizontal', // 'vertical', 'horizontal'
            color: 'silver',      // 'gold', 'blue', 'silver', 'black'
            shape: 'rect',      // 'rect', 'pill'
            label: 'checkout'     // 'checkout', 'pay', 'buynow', 'paypal'
        }
    }).render('#paypal-button-container');
</script>