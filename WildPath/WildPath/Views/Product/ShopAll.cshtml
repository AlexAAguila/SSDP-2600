@model PaginatedList<WildPath.EfModels.Item>

@{
    ViewData["Title"] = "ShopAll";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Shop All</h1>

<div id="paypal-button-container">
    <form asp-action="ShopAll" method="get">
        <div class="form-group" style="display: inline-block">
            <span>Search:</span>
            <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-primary" />
        </div>
    </form>

    @if (Model.Any())
    {
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.First().Supplier)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().ItemName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().ItemDetails)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().Price)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().Category)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().Weight)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().Size)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().Colour)
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Supplier)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ItemName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ItemDetails)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Price)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Category)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Weight)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Size)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Colour)
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <!-- Pagination -->
        <nav>
            <ul class="pagination">
                <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                    <a class="page-link"
                       href="@Url.Action("ShopAll", new { searchString = ViewData["SearchString"], pageNumber = Model.PageIndex - 1 })">
                        Previous
                    </a>
                </li>
                <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                    <a class="page-link"
                       href="@Url.Action("ShopAll", new { searchString = ViewData["SearchString"], pageNumber = Model.PageIndex + 1 })">
                        Next
                    </a>
                </li>
            </ul>
        </nav>
    }
    else
    {
        <p>No items found.</p>
    }

    <div>
        <a asp-action="ShopAll" class="btn btn-primary">Back to List</a>
    </div>
</div>
