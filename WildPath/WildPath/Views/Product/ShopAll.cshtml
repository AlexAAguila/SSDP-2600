@model PaginatedList<WildPath.ViewModels.ProductVM>
@{
    ViewData["Title"] = "ShopAll";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h1>Shop All</h1>
<div>
    <form asp-action="ShopAll" method="get">
        <div class="form-group" style="display: inline-block">
            <span>Search:</span>
            <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-primary" />
        </div>
    </form>

  @if (Model.Any())
    {
        <div class="product-grid">
            @foreach (var ProVM in Model)
            {
                var imageBase64 = "";
                var imageAltText = "Product Image";
                var image = ProVM.ImageStore; // This needs to match your model's image store property

                if (image != null && image.ImageId.ToString() == ProVM.Item.ItemImageId)
                {
                    imageBase64 = Convert.ToBase64String(image.Image);
                    imageAltText = image.FileName;
                }
                else
                {
                    var placeholderImagePath = "~/images/placeholder.jpeg";
                }

                <div class="product-card">
                    @if (!String.IsNullOrEmpty(imageBase64))
                    {
                        <img src="data:image/jpeg;base64,@imageBase64" alt="@imageAltText" class="product-image" />
                    }
                    else
                    {
                    <img src="@Url.Content("~/images/placeholder.jpeg")" alt="Placeholder Image" class="product-image" />
                    }
                    <div class="product-info">
                        <h3>
                     @ProVM.Item.ItemName
                        </h3>
                        <p>@Html.Raw(ProVM.Item.ItemDetails.Replace("\n", "<br/>"))</p>
                        <p class="price">$@ProVM.Item.Price</p>
                    </div>
                </div>
            }
            <nav>
                <ul class="pagination">
                    <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                        <a class="page-link"
                           href="@Url.Action("ShopAll", new { sortOrder = ViewData["CurrentSort"], searchString = ViewData["SearchString"], pageNumber = Model.PageIndex - 1 })">
                            Previous
                        </a>
                    </li>
                    <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                        <a class="page-link"
                           href="@Url.Action("ShopAll", new { sortOrder = ViewData["CurrentSort"], searchString = ViewData["SearchString"], pageNumber = Model.PageIndex + 1 })">
                            Next
                        </a>
                    </li>
                </ul>
            </nav>
            <button id="shoppingCartButton" class="btn btn-primary mb-1">
                <a class="nav-link text-dark" asp-area="" asp-controller="Product" asp-action="ShoppingCart">Go To Cart</a>

            </button>
        </div>
    }
    else
    {
        <p>No items found.</p>
    }

</div>  

<style>

.product-grid {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    padding: 20px;
    justify-content: space-between;
}

.product-card {
    border: 1px solid #ddd;
    border-radius: 5px;
    overflow: hidden;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    display:flex;
    align-items:center;
    padding:1rem;
    gap:1rem;
}

.product-image {
    width: 40%;
    height: fit-content;
    display: block;
}

.product-info {
    padding: 15px;
}

.product-info h3 {
    margin-top: 0;
    color: #333;
}

.product-info p {
    margin-bottom: 5px;
    line-height: 1.4;
    height: 3em; /* Adjust the height as needed, based on your line-height and desired number of lines */
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 3; /* Number of lines you want to display */
    -webkit-box-orient: vertical;
    text-overflow: ellipsis;
}


.price {
    font-weight: bold;
    color: #E44D26;
}

.form-group {
    margin-bottom: 20px;
}

.btn-primary {
    background-color: #007bff;
    border-color: #007bff;
    color: white;
}

.btn-primary:hover {
    background-color: #0056b3;
    border-color: #0056b3;
}




</style>
