@model PaginatedList<WildPath.ViewModels.ProductVM>
@{
    ViewData["Title"] = "ShopAll";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h1>Shop All</h1>
<div>
    <form asp-action="ShopAll" method="get">
        <div class="form-group" style="display: inline-block">
            <span>Search:</span>
            <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-primary" />
        </div>
    </form>

  @if (Model.Any())
    {
        <div class="product-grids">
            @foreach (var ProVM in Model)
            {
                var imageBase64 = "";
                var imageAltText = "Product Image";
                var image = ProVM.ImageStore;
                var productUrl = Url.Action("Details", new { id = ProVM.Item.PkItemId });

                if (image != null && image.ImageId.ToString() == ProVM.Item.ItemImageId)
                {
                    imageBase64 = Convert.ToBase64String(image.Image);
                    imageAltText = image.FileName;
                }
                else
                {
                    var placeholderImagePath = "~/images/placeholder.jpeg";
                }

                <a asp-action="Details" asp-route-id="@ProVM.Item.PkItemId" class="product-cards">
                @if (!String.IsNullOrEmpty(imageBase64))
                    {
                        <img src="data:image/jpeg;base64,@imageBase64" alt="@imageAltText" class="product-images" />
                    }
                    else
                    {
                    <img src="@Url.Content("~/images/placeholder.jpeg")" alt="Placeholder Image" class="product-images" />
                    }
                    <div class="product-info">
                        <h3>
                     @ProVM.Item.ItemName
                        </h3>
                        <p>@Html.Raw(ProVM.Item.ItemDetails.Replace("\n", "<br/>"))</p>
                        <p class="price">$@ProVM.Item.Price</p>
                    </div>
                </a>
            }
            <nav>
                <ul class="pagination">
                    <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                        <a class="page-link"
                           href="@Url.Action("ShopAll", new { sortOrder = ViewData["CurrentSort"], searchString = ViewData["SearchString"], pageNumber = Model.PageIndex - 1 })">
                            Previous
                        </a>
                    </li>
                    <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                        <a class="page-link"
                           href="@Url.Action("ShopAll", new { sortOrder = ViewData["CurrentSort"], searchString = ViewData["SearchString"], pageNumber = Model.PageIndex + 1 })">
                            Next
                        </a>
                    </li>
                </ul>
            </nav>
            <button id="shoppingCartButton" class="btn btn-primary mb-1">
                <a class="nav-link text-dark" asp-area="" asp-controller="Product" asp-action="ShoppingCart">Go To Cart</a>

            </button>
        </div>
    }
    else
    {
        <p>No items found.</p>
    }

</div>  

<style>



</style>
