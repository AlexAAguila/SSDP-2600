@model WildPath.EfModels.Item

<style>
    #itemDetails {
        min-height: 40px;
        max-height: 400px;
        overflow-y: auto;
        resize: none;
    }
</style>

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Create a New Product</h1>

@* <h4>Item</h4>
 *@<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ItemImageId" class="control-label"></label>
                <input type="file" name="imageFile" class="form-control" />
                <span asp-validation-for="ItemImageId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Supplier" class="control-label"></label>
                <input asp-for="Supplier" class="form-control" />
                <span asp-validation-for="Supplier" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ItemName" class="control-label"></label>
                <input asp-for="ItemName" class="form-control" />
                <span asp-validation-for="ItemName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ItemDetails" class="control-label"></label>
                <textarea asp-for="ItemDetails" id="itemDetails" class="form-control"></textarea>
                <span asp-validation-for="ItemDetails" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Stock" class="control-label"></label>
                <input asp-for="Stock" class="form-control" />
                <span asp-validation-for="Stock" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Category" class="control-label"></label>
                <select asp-for="Category" class="form-control">
                    <option value="Backpacks">Backpacks</option>
                    <option value="Tents">Tents</option>
                    <option value="Sleeping Gear">Sleeping Gear</option>
                    <option value="Camping Furniture">Camping Furniture</option>
                    <option value="Accessories">Accessories</option>
                </select>
                <span asp-validation-for="Category" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Weight" class="control-label"></label>
                <input asp-for="Weight" class="form-control" />
                <span asp-validation-for="Weight" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Size" class="control-label"></label>
                <input asp-for="Size" class="form-control" />
                <span asp-validation-for="Size" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Colour" class="control-label"></label>
                <input asp-for="Colour" class="form-control" />
                <span asp-validation-for="Colour" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div style="margin-top: 10px;"></div>
                <input type="submit" value="Create" class="btn btn-primary" style="background-color:black"/>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" style="color:black">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const itemDetails = document.getElementById('itemDetails');
            const maxHeight = 400;

            itemDetails.addEventListener('input', function (event) {
                this.value = this.value.replace(/(^|\n)-\s/g, '$1\u2022 ');
            });

            itemDetails.addEventListener('input', autoResize, false);

            function autoResize() {
                this.style.height = 'auto';
                let newHeight = this.scrollHeight;

                if (newHeight > maxHeight) {
                    newHeight = maxHeight;
                    this.style.overflowY = 'auto';
                } else {
                    this.style.overflowY = 'hidden';
                }

                this.style.height = newHeight + 'px';
            }

            autoResize.call(itemDetails);
        });
    </script>
}
