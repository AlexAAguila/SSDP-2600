@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

<style>
    .account-nav-link.active {
        background-color: transparent !important;
        font-weight: bold;
    }

    .account-nav-link {
        display: block;
        color: black !important;
        text-decoration: none;
        font-size: 20px;
        margin-bottom: 20px;
    }
</style>

<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="account-nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Profile</a></li>
    <li class="nav-item"><a class="account-nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">Email</a></li>
    <li class="nav-item"><a class="account-nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Password</a></li>
    @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
    }
    <li class="nav-item"><a class="account-nav-link @ManageNavPages.TransactionsNavClass(ViewContext)" id="transactions" asp-controller="Transaction" asp-action="UserTransactions">Order History</a></li>
    <li class="nav-item"><a class="account-nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">Personal data</a></li>
    <li class="nav-item">
        <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" class="form-inline" style="margin-bottom: 20px;">
            <button type="submit" class="account-nav-link btn btn-link" style="padding: 0; border: none; background: none;">Logout</button>
        </form>
    </li>

</ul>
